var path = '/Applications/MAMP/htdocs/dona_fruta/';module.exports = function( grunt ) {   grunt.initConfig({  	pkg: grunt.file.readJSON('package.json'),  	uglify: {  		options: {   			// the banner is inserted at the top of the output    		banner: '/*! <%= pkg.name %> <%= grunt.template.today("dd-mm-yyyy") %> */\n'  		},  		  		dist: {    		files: {      			'js/scripts.js': ['bower_components/foundation/js/foundation.min.js','js/jquery.queryloader2.js','js/wow.js','js/app.js'],    		}  		}	  },    sprite:{      'all': {        src: 'sprites/*.png',        destImg: 'images/spritesheet.png',        destCSS: 'sprites.css',        algorithm: 'binary-tree'      }    },  cssmin: {    add_banner: {      options: {        banner: '/*\nTheme Name: <%= pkg.title %>\nTheme URI: <%= pkg.homepage %>\nDescription: <%= pkg.description %>\nVersion: <%= pkg.version %>\nAuthor: <%= pkg.author %>\nTags: <%= pkg.tags %>\n*/'      },          files: {        'style.css': ['stylesheets/app.css','sprites.css','stylesheets/animate.css']      }    }  },  ftpush: {    build: {      auth: {        host: 'ftp.donafruta.com.br',        port: 21,        authKey: 'dona_fruta'      },      src: '/Applications/MAMP/htdocs/dona_fruta/',      dest: '/public_html/site/',      exclusions: [        path+'bower_components',        path+'stylesheets',        path+'node_modules',        path+'sprites',        path+'.sass-cache',        path+'.git',        path+'waiting',        path+'.grunt',        path+'scss',        path+'.ftppass',        path+'.bowerrc',        path+'.htaccess',        path+'sprites.css',        path+'.gitignore',        path+'config.rb',        path+'bower.json',        path+'Gruntfile.js',        path+'package.json',        path+'README.md',        //path+'theme-options.php',      ],      //keep: ['/public_html/wp-content/themes/eissoambientes/theme-options.php']    }  },	watch : {      dist : {        files : [          'js/*','stylesheets/*','images/*','*.php','*.html','sprites/*'        ],         tasks : [ 'uglify','sprite','cssmin','ftpush' ]      }    }  });  grunt.loadNpmTasks('grunt-contrib-uglify');  grunt.loadNpmTasks('grunt-contrib-ftpush');  grunt.loadNpmTasks('grunt-contrib-cssmin');  grunt.loadNpmTasks('grunt-spritesmith');  //grunt.loadNpmTasks('grunt-imgmin');  //grunt.loadNpmTasks('grunt-continue');  grunt.loadNpmTasks('grunt-contrib-watch');  //grunt.loadNpmTasks('grunt-css');  /*grunt.loadNpmTasks('grunt-contrib-jshint');  grunt.loadNpmTasks('grunt-contrib-concat');  grunt.loadNpmTasks('grunt-git');  grunt.loadNpmTasks('grunt-contrib-imagemin');*/  grunt.registerTask( 'default', ['uglify','cssmin', 'sprite','ftpush'] );  grunt.registerTask( 'w', [ 'watch' ] );};/** * npm install -g grunt-cli * npm install grunt-ftpush --save-dev * npm install grunt --save-dev * * npm install matchdep --save-dev   npm install grunt-contrib-watch --save-dev   npm install grunt-contrib-compass --save-dev   npm install grunt-contrib-uglify --save-dev   npm install grunt-ftp-deploy --save-dev   npm install grunt-css --save-dev * *  */